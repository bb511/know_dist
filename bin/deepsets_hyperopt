#!/usr/bin/env python

# Run the training of the interaction network..
import argparse
import os
import sys
sys.path.append("..")

from deepsets.hyperparam_optimisation import main
parser = argparse.ArgumentParser(formatter_class=argparse.
                                 ArgumentDefaultsHelpFormatter)
parser.add_argument("--test_kfold", type=int, default=-1,
                    help="Which kfold to use for test.")
parser.add_argument("--gpu", type=str, default="",
                    help="Sets the number of the GPU to run on.")
args = parser.parse_args()

if args.gpu:
    os.environ["CUDA_VISIBLE_DEVICES"] = args.gpu

kfolds = 5
train_kfolds = [kfold for kfold in range(kfolds) if kfold != args.test_kfold]
data_hyperparams = {
    "fpath":        '../../ki_data/jets_8constituents_ptetaphi_robust',
    "fnames_train": ['jet_images_c8_minpt2.0_ptetaphi_robust_fast_' + str(train_kfold)
                     for train_kfold in train_kfolds],
    "fname_test":   'jet_images_c8_minpt2.0_ptetaphi_robust_fast_' + str(args.test_kfold),
}

training_hyperparams = {
    "batch":        [64, 128, 256, 512],
    "epochs":       150,
    "lr":           [0.0001, 0.01],
    "valid_split":  0.2,
}

compilation_hyperparams = {
    "optimizer": ['adam'],
    "loss":      'softmax_with_crossentropy',
    "metrics":   ['categorical_accuracy'],
}

model_hyperparams = {
    "nnodes_phi": [24, 32],
    "nnodes_rho": [32],
    "activ": ['relu', 'tanh'],
}

args = {
    "study_name":           'synth_8const_ptetaphi_0',
    "storage":              'deepsets_inv',
    "deepsets_type":        'invariant',
    "outdir":               'deepsets_hyperopt',
    "data_hyperparams":     data_hyperparams,
    "training_hyperparams": training_hyperparams,
    "model_hyperparams":    model_hyperparams,
    "compilation":          compilation_hyperparams,
}

main(args)
