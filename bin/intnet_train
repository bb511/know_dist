#!/usr/bin/env python

# Run the training of the interaction network..
import argparse
import os
import sys
sys.path.append("..")

from intnets.train import main
parser = argparse.ArgumentParser(formatter_class=argparse.
                                 ArgumentDefaultsHelpFormatter)
parser.add_argument("--gpu", type=str, default="",
                    help="Sets the number of the GPU to run on.")
parser.add_argument("--outdir", type=str, default="test",
                    help="The output directory name.")
args = parser.parse_args()

if args.gpu:
    os.environ["CUDA_VISIBLE_DEVICES"] = args.gpu

data_hyperparams = {
    "fpath":       '../../ki_data/mlready',
    "fname":       'jet_images_c150_pt2.0_jedinet_robust',
}

training_hyperparams = {
    "batch":        128,
    "epochs":       5,
    "lr":           0.001,
    "valid_split":  0.3,
}

intnet_compilation_hyperparams = {
    "optimizer": 'adam',
    "loss":      'softmax_with_crossentropy',
    "metrics":   ['categorical_accuracy'],
}

intnet_hyperparams = {
    "effects_nnodes": 50,
    "dynamic_nnodes": 50,
    "abstrac_nnodes": 50,
    "effects_activ":  "selu",
    "dynamic_activ":  "selu",
    "abstrac_activ":  "selu",
    "neffects":       14,
    "ndynamics":      10,
    "l2":             0.001,
    "summation":      True,
}

args = {
    "data_hyperparams":     data_hyperparams,
    "training_hyperparams": training_hyperparams,
    "intnet_type":          'dens',
    "intnet_hyperparams":   intnet_hyperparams,
    "intnet_compilation":   intnet_compilation_hyperparams,
    "outdir":               args.outdir,
}

main(args)
